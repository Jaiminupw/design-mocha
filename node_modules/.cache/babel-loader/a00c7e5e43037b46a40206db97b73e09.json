{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Ajay N\\\\Projects\\\\design-mocha\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _defineProperty from \"C:\\\\Ajay N\\\\Projects\\\\design-mocha\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:\\\\Ajay N\\\\Projects\\\\design-mocha\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Ajay N\\\\Projects\\\\design-mocha\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Ajay N\\\\Projects\\\\design-mocha\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Ajay N\\\\Projects\\\\design-mocha\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Ajay N\\\\Projects\\\\design-mocha\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Ajay N\\\\Projects\\\\design-mocha\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Ajay N\\\\Projects\\\\design-mocha\\\\src\\\\component\\\\Register.js\";\nimport React from 'react';\nimport { Form, Modal, Button } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport '../css/register.css';\nimport { RegisterMe } from '../services/RegisterMe';\n\nvar Cookies = require(\"js-cookie\");\n\nvar Register = /*#__PURE__*/function (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.handleShow = function () {\n      if (!_this.state.accept) {\n        _this.setState({\n          show: true,\n          accept: true\n        });\n      } else {\n        _this.setState({\n          show: false,\n          accept: false\n        });\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        show: false\n      });\n    };\n\n    _this.handleChange = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n\n              case 2:\n                _this.setState({\n                  successMessage: \"\"\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.formSubmit = function (e) {\n      e.preventDefault();\n      var form = e.currentTarget;\n\n      if (form.checkValidity() === false) {\n        e.preventDefault();\n        e.stopPropagation();\n      } else {\n        if (_this.state.password !== _this.state.cpassword) {\n          _this.setState({\n            successMessage: \"Password doesn't match\"\n          });\n        } else if (_this.state.username.split(\" \")[1]) {\n          _this.setState({\n            successMessage: \"Incorrect username\"\n          });\n        } else {\n          _this.setState({\n            successMessage: \"\"\n          });\n\n          _this.setState({\n            isloading: true\n          });\n\n          var data = {\n            username: _this.state.username,\n            email: _this.state.email,\n            password: _this.state.password,\n            confirmPassword: _this.state.password\n          };\n          RegisterMe(data).then( /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res) {\n              var in60Minutes;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _this.setState({\n                        isloading: false\n                      });\n\n                      if (!(res.status === 201)) {\n                        _context2.next = 9;\n                        break;\n                      }\n\n                      _context2.next = 4;\n                      return Cookies.remove(\"session\");\n\n                    case 4:\n                      _context2.next = 6;\n                      return Cookies.remove(\"userProfile\");\n\n                    case 6:\n                      in60Minutes = 1 / 24;\n                      Cookies.set(\"username\", _this.state.username, {\n                        expires: in60Minutes\n                      });\n\n                      _this.setState({\n                        successMessage: \"Registration Successful\",\n                        registered: true\n                      });\n\n                    case 9:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            return function (_x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }()).catch(function (err) {\n            if (err.response) {\n              if (err.response.data.username) {\n                _this.setState({\n                  successMessage: \"This username is already taken\",\n                  isloading: false\n                });\n              } else if (err.response.data.email) {\n                _this.setState({\n                  successMessage: err.response.data.email,\n                  isloading: false\n                });\n              } else {\n                _this.setState({\n                  successMessage: \"something went wrong\",\n                  isloading: false\n                });\n              }\n            } else {\n              _this.setState({\n                successMessage: \"something went wrong\",\n                isloading: false\n              });\n            }\n          });\n        }\n      }\n\n      _this.setState({\n        validated: true\n      });\n    };\n\n    _this.state = {\n      isloading: false,\n      successMessage: false,\n      show: false,\n      accept: false,\n      registered: false,\n      validated: false\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.registered) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: \"/create-profile\",\n            state: {\n              username: this.state.username\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rsection signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row itemcenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6 center \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"welcome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"sectionwel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }\n      }, \"WELCOME TO \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 75\n        }\n      }), \"DESIGNMOCHA.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6 form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rflex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        noValidate: true,\n        validated: this.state.validated,\n        onSubmit: this.formSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 37\n        }\n      }, !this.state.successMessage ? '' : /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 77\n        }\n      }, this.state.successMessage), !this.state.isloading ? '' : /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 72\n        }\n      }, \"Loading please wait..\"), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"validationCustom01\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"exampleInputEmail1\",\n        className: \"mochalabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 45\n        }\n      }, \"USERNAME\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        className: \"form-control mochainput \",\n        id: \"exampleInputEmail1\",\n        \"aria-describedby\": \"FullName\",\n        required: true,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 45\n        }\n      }, \"username is required\")), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"validationCustom02\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"exampleInputEmail1\",\n        className: \"mochalabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 45\n        }\n      }, \" EMAIL ADDRESS\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        className: \"form-control mochainput \",\n        id: \"exampleInputEmail1\",\n        \"aria-describedby\": \"Email\",\n        required: true,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 45\n        }\n      }, \"Email is required\")), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"validationCustom03\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"exampleInputPassword1\",\n        className: \"mochalabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 45\n        }\n      }, \"PASSWORD\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"form-control mochainput \",\n        id: \"exampleInputPassword1\",\n        required: true,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 45\n        }\n      }, \"Password is required\")), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"validationCustom04\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"exampleInputPassword1\",\n        className: \"mochalabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 45\n        }\n      }, \"CONFIRM PASSWORD\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"cpassword\",\n        className: \"form-control mochainput\",\n        id: \"exampleInputPassword1\",\n        required: true,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 45\n        }\n      }, \"Enter password\")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"switch\",\n        id: \"custom-switch\",\n        label: \"Privacy\\xA0Policy, \\xA0 Terms\\xA0Of\\xA0Service\",\n        className: \"text-color\",\n        name: \"accept\",\n        required: true,\n        onClick: this.handleShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"mochabtn bg text-color\",\n        disabled: this.state.isloading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 41\n        }\n      }, \"Sign Up\"), /*#__PURE__*/React.createElement(Link, {\n        to: \"/login\",\n        className: \"btn form a px-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 41\n        }\n      }, \"Already A Member\"))))))), /*#__PURE__*/React.createElement(Modal, {\n        centered: true,\n        show: this.state.show,\n        onHide: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, \"PRIVACY POLICY, TERMS OF SERVICE\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mochabtn bg\",\n        onClick: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }, \"I Understand\"))));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nRegister.propTypes = {};\nexport default Register;","map":{"version":3,"sources":["C:/Ajay N/Projects/design-mocha/src/component/Register.js"],"names":["React","Form","Modal","Button","Link","Redirect","RegisterMe","Cookies","require","Register","props","handleShow","state","accept","setState","show","handleClose","handleChange","e","target","name","value","successMessage","formSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","password","cpassword","username","split","isloading","data","email","confirmPassword","then","res","status","remove","in60Minutes","set","expires","registered","catch","err","response","validated","pathname","Component","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Modal, Button } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport '../css/register.css'\nimport { RegisterMe } from '../services/RegisterMe';\nvar Cookies = require(\"js-cookie\")\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isloading: false,\n            successMessage: false,\n            show: false,\n            accept: false,\n            registered: false,\n            validated: false\n        };\n    }\n    handleShow = () => {\n        if (!this.state.accept) {\n            this.setState({ show: true, accept: true })\n        }\n        else {\n            this.setState({ show: false, accept: false })\n        }\n    }\n    handleClose = () => {\n        this.setState({ show: false })\n    }\n    handleChange = async (e) => {\n        await this.setState({ [e.target.name]: e.target.value })\n        this.setState({ successMessage: \"\" })\n    }\n    formSubmit = (e) => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        else {\n            if (this.state.password !== this.state.cpassword) {\n                this.setState({ successMessage: \"Password doesn't match\" })\n            }\n            else if(this.state.username.split(\" \")[1]){\n                this.setState({ successMessage: \"Incorrect username\" })\n            }\n            else {\n                this.setState({ successMessage: \"\" })\n                this.setState({ isloading: true })\n                var data = {\n                    username: this.state.username,\n                    email: this.state.email,\n                    password: this.state.password,\n                    confirmPassword: this.state.password\n                }\n                RegisterMe(data).then(async (res) => {\n                    this.setState({ isloading: false })\n                    if (res.status === 201) {\n                        await Cookies.remove(\"session\")\n                        await Cookies.remove(\"userProfile\")\n                        var in60Minutes = 1/24;\n                        Cookies.set(\"username\", this.state.username, {expires: in60Minutes})\n                        this.setState({ successMessage: \"Registration Successful\", registered: true })\n                    }\n                }).catch((err) => {\n                    if (err.response) {\n                        if (err.response.data.username) {\n                            this.setState({ successMessage: \"This username is already taken\", isloading: false })\n                        }\n                        else if (err.response.data.email) {\n                            this.setState({ successMessage: err.response.data.email, isloading: false })\n                        }\n                        else {\n                            this.setState({ successMessage: \"something went wrong\", isloading: false })\n                        }\n                    }\n                    else {\n                        this.setState({ successMessage: \"something went wrong\", isloading: false })\n                    }\n                })\n            }\n        }\n        this.setState({validated: true})\n    }\n    render() {\n        if (this.state.registered) {\n            return <Redirect\n            to={{\n                pathname: \"/create-profile\",\n                state: { username: this.state.username }\n            }}\n        />\n        }\n        return (\n            <div>\n                {/* {this.state.isloading ? (<div className=\"loader\"><img src = {loader} alt=\"loader\"/></div>) : ''} */}\n                <div className=\"rsection signup\">\n                    <div className=\"container\">\n                        <div className=\"row itemcenter\">\n                            <div className=\"col-sm-6 center \">\n                                <div className=\"welcome\">\n                                    <h4 className=\"sectionwel\">WELCOME TO <br />DESIGNMOCHA.</h4>\n                                </div>\n                            </div>\n                            <div className=\"col-sm-6 form\">\n                                <div className=\"rflex\">\n                                    <Form noValidate validated={this.state.validated} onSubmit={this.formSubmit}>\n                                        {!this.state.successMessage ? '' : (<p className=\"text-color\">{this.state.successMessage}</p>)}\n                                        {!this.state.isloading ? '' : (<p className=\"text-color\">Loading please wait..</p>)}\n                                        <Form.Group controlId=\"validationCustom01\">\n                                            <label for=\"exampleInputEmail1\" className=\"mochalabel\">USERNAME</label>\n                                            <input type=\"text\" name=\"username\" className=\"form-control mochainput \" id=\"exampleInputEmail1\" aria-describedby=\"FullName\"  required onChange={this.handleChange} />\n                                            <Form.Control.Feedback type=\"invalid\">username is required</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group controlId=\"validationCustom02\">\n                                            <label for=\"exampleInputEmail1\" className=\"mochalabel\"> EMAIL ADDRESS</label>\n                                            <input type=\"email\" name=\"email\" className=\"form-control mochainput \" id=\"exampleInputEmail1\" aria-describedby=\"Email\"  required onChange={this.handleChange} />\n                                            <Form.Control.Feedback type=\"invalid\">Email is required</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group controlId=\"validationCustom03\">\n                                            <label for=\"exampleInputPassword1\" className=\"mochalabel\">PASSWORD</label>\n                                            <input type=\"password\" name=\"password\" className=\"form-control mochainput \" id=\"exampleInputPassword1\"  required onChange={this.handleChange} />\n                                            <Form.Control.Feedback type=\"invalid\">Password is required</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group controlId=\"validationCustom04\">\n                                            <label for=\"exampleInputPassword1\" className=\"mochalabel\">CONFIRM PASSWORD</label>\n                                            <input type=\"password\" name=\"cpassword\" className=\"form-control mochainput\" id=\"exampleInputPassword1\"  required onChange={this.handleChange} />\n                                            <Form.Control.Feedback type=\"invalid\">Enter password</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <br />\n                                        <Form.Check\n                                            type=\"switch\"\n                                            id=\"custom-switch\"\n                                            label=\"Privacy&nbsp;Policy, &nbsp; Terms&nbsp;Of&nbsp;Service\"\n                                            className=\"text-color\"\n                                            name=\"accept\"\n                                            required\n                                            onClick={this.handleShow}\n                                        />\n                                        <button type=\"submit\" className=\"mochabtn bg text-color\" disabled={this.state.isloading}>Sign Up</button>\n                                        <Link to=\"/login\" className=\"btn form a px-0\">Already A Member</Link>\n                                    </Form>\n                                    {/* <span className=\"flow\"> or connect with -\n                                        <Nav.Link href=\"/\"><i className=\"cl fa fa-facebook\" aria-hidden=\"true\"></i></Nav.Link>\n                                        <Nav.Link href=\"/\"><i className=\"cl fa fa-instagram\" aria-hidden=\"true\"></i></Nav.Link>\n                                        <Nav.Link href=\"/\"><i className=\"cl fa fa-twitter\" aria-hidden=\"true\"></i></Nav.Link>\n                                        <Nav.Link href=\"/\"><i className=\"cl fa fa-pinterest-p\" aria-hidden=\"true\"></i></Nav.Link>\n                                    </span> */}\n                                </div>\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n                <Modal centered show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>PRIVACY POLICY, TERMS OF SERVICE</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</Modal.Body>\n                    <Modal.Footer>\n                        <Button className=\"mochabtn bg\" onClick={this.handleClose}>\n                            I Understand\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}